{"version":3,"sources":["webpack://PayseraMoney/webpack/universalModuleDefinition","webpack://PayseraMoney/webpack/bootstrap","webpack://PayseraMoney/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack://PayseraMoney/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\",\"amd\":\"bignumber\",\"root\":\"BigNumber\"}","webpack://PayseraMoney/./src/Error/DifferentCurrenciesError.js","webpack://PayseraMoney/./src/Error/MoneyError.js","webpack://PayseraMoney/./src/Error/UnsupportedAmountError.js","webpack://PayseraMoney/./src/Error/UnsupportedCurrencyError.js","webpack://PayseraMoney/./src/util/parseAmount.js","webpack://PayseraMoney/./src/fractions.js","webpack://PayseraMoney/./src/util/parseCurrency.js","webpack://PayseraMoney/./src/BigNumberMath.js","webpack://PayseraMoney/./src/Money.js","webpack://PayseraMoney/./src/AggregatedMoney.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DifferentCurrenciesError","Error","MoneyError","UnsupportedAmountError","UnsupportedCurrencyError","amount","isNumber","isString","formattedAmount","replace","split","length","match","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EEK","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RUR","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XCD","XOF","XPF","XPT","YER","ZAR","ZMW","ZWL","currency","upperCaseCurrency","toUpperCase","isUndefined","fractions","DEFAULT_CONFIG","DECIMAL_PLACES","FORMAT","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","createConfig","decimalPlaces","assign","BigNumberMath","config","BigNumberClone","BigNumber","clone","leftOperand","rightOperand","createBigNumberInstance","plus","toString","minus","dividedBy","multipliedBy","operand","absoluteValue","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isEqualTo","isNegative","isZero","isPositive","precision","toFixed","ROUND_CEIL","ROUND_FLOOR","toFormat","mathInstance","Money","parseAmount","parseCurrency","result","getMath","floor","mul","getFraction","integerRepresentation","parseInt","money","throwErrorIfNotSameCurrency","add","getAmount","getCurrency","sub","multiplier","divisor","div","round","getCurrencyFraction","ceil","abs","isGt","isGte","isLt","isLte","isSameCurrency","isEqual","fraction","thousandsSeparator","currencyFraction","format","formatAmount","givenFraction","AggregatedMoney","moneyList","forEach","currentMoney","createZero","values"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"bignumber.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\", \"bignumber\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PayseraMoney\"] = factory(require(\"lodash\"), require(\"bignumber.js\"));\n\telse\n\t\troot[\"PayseraMoney\"] = factory(root[\"_\"], root[\"BigNumber\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","export default class DifferentCurrenciesError extends Error {\n}\n","export default class MoneyError extends Error {\n}\n","export default class UnsupportedAmountError extends Error {\n}\n","export default class UnsupportedCurrencyError extends Error {\n}\n","import { isNumber, isString } from 'lodash-es';\nimport { UnsupportedAmountError } from '../Error';\n\nexport default (amount) => {\n    if (amount === '' || amount === null) {\n        return null;\n    } else if (isNumber(amount)) {\n        return amount;\n    } else if (isString(amount)) {\n        let formattedAmount = amount.replace(',', '.');\n\n        if (formattedAmount.split('.').length > 2) {\n            throw new UnsupportedAmountError(`Invalid amount: ${amount}`);\n        }\n\n        if (!formattedAmount.match(/^[-+]?\\d+(\\.\\d+)?$/)) {\n            throw new UnsupportedAmountError(`Amount has invalid chars: ${amount}`);\n        }\n\n        formattedAmount = formattedAmount.replace(/^([-+]?)0+(\\d)/, '$1$2');\n\n        return formattedAmount !== '' ? formattedAmount : null;\n    }\n\n    throw new UnsupportedAmountError(`Amount is neither string nor number: ${amount}`);\n};\n","export default {\n    AED: 2,\n    AFN: 2,\n    ALL: 2,\n    AMD: 0,\n    ANG: 2,\n    AOA: 1,\n    ARS: 2,\n    AUD: 2,\n    AWG: 2,\n    AZN: 2,\n    BAM: 2,\n    BBD: 2,\n    BDT: 2,\n    BGN: 2,\n    BHD: 3,\n    BIF: 0,\n    BMD: 2,\n    BND: 2,\n    BOB: 2,\n    BRL: 2,\n    BSD: 2,\n    BTN: 2,\n    BWP: 2,\n    BYR: 0,\n    BYN: 2,\n    BZD: 2,\n    CAD: 2,\n    CDF: 2,\n    CHF: 2,\n    CLP: 0,\n    CNY: 2,\n    COP: 2,\n    CRC: 2,\n    CUP: 2,\n    CVE: 2,\n    CZK: 2,\n    DJF: 0,\n    DKK: 2,\n    DOP: 2,\n    DZD: 2,\n    EEK: 2,\n    EGP: 2,\n    ERN: 2,\n    ETB: 2,\n    EUR: 2,\n    FJD: 2,\n    FKP: 2,\n    GBP: 2,\n    GEL: 2,\n    GHS: 2,\n    GIP: 2,\n    GMD: 2,\n    GNF: 0,\n    GTQ: 2,\n    GYD: 2,\n    HKD: 2,\n    HNL: 2,\n    HRK: 2,\n    HTG: 2,\n    HUF: 2,\n    IDR: 0,\n    ILS: 2,\n    INR: 2,\n    IQD: 0,\n    IRR: 0,\n    ISK: 0,\n    JMD: 2,\n    JOD: 3,\n    JPY: 0,\n    KES: 2,\n    KGS: 2,\n    KHR: 0,\n    KMF: 0,\n    KPW: 0,\n    KRW: 0,\n    KWD: 3,\n    KYD: 2,\n    KZT: 2,\n    LAK: 0,\n    LBP: 2,\n    LKR: 2,\n    LRD: 2,\n    LSL: 2,\n    LTL: 2,\n    LVL: 2,\n    LYD: 3,\n    MAD: 2,\n    MDL: 2,\n    MGA: 1,\n    MKD: 2,\n    MMK: 0,\n    MNT: 2,\n    MOP: 1,\n    MRO: 1,\n    MUR: 2,\n    MVR: 2,\n    MWK: 2,\n    MXN: 2,\n    MYR: 2,\n    MZN: 2,\n    NAD: 2,\n    NGN: 2,\n    NIO: 2,\n    NOK: 2,\n    NPR: 2,\n    NZD: 2,\n    OMR: 3,\n    PAB: 2,\n    PEN: 2,\n    PGK: 2,\n    PHP: 2,\n    PKR: 2,\n    PLN: 2,\n    PYG: 0,\n    QAR: 2,\n    RON: 2,\n    RSD: 2,\n    RUB: 2,\n    RUR: 2,\n    RWF: 0,\n    SAR: 2,\n    SBD: 2,\n    SCR: 2,\n    SDG: 2,\n    SEK: 2,\n    SGD: 2,\n    SHP: 2,\n    SLL: 0,\n    SOS: 2,\n    SRD: 2,\n    STD: 0,\n    SYP: 2,\n    SZL: 2,\n    THB: 2,\n    TJS: 2,\n    TMT: 2,\n    TND: 3,\n    TOP: 2,\n    TRY: 2,\n    TTD: 2,\n    TWD: 1,\n    TZS: 2,\n    UAH: 2,\n    UGX: 0,\n    USD: 2,\n    UYU: 2,\n    UZS: 2,\n    VEF: 2,\n    VND: 0,\n    VUV: 0,\n    WST: 2,\n    XAF: 0,\n    XAG: 4,\n    XAU: 6,\n    XCD: 2,\n    XOF: 0,\n    XPF: 0,\n    XPT: 6,\n    YER: 0,\n    ZAR: 2,\n    ZMW: 0,\n    ZWL: 2,\n};\n","import { isUndefined } from 'lodash-es';\nimport { UnsupportedCurrencyError } from '../Error';\nimport fractions from '../fractions';\n\nexport default (currency) => {\n    if (currency === null || currency === '') {\n        throw new UnsupportedCurrencyError('Currency not provided');\n    }\n    const upperCaseCurrency = currency.toUpperCase();\n\n    if (isUndefined(fractions[upperCaseCurrency])) {\n        throw new UnsupportedCurrencyError(`Unsupported currency: ${currency}`);\n    }\n\n    return upperCaseCurrency;\n};\n","import { BigNumber } from 'bignumber.js';\n\nconst DEFAULT_CONFIG = {\n    DECIMAL_PLACES: 20,\n    FORMAT: {\n        decimalSeparator: '.',\n        groupSeparator: ',',\n        groupSize: 3,\n        secondaryGroupSize: 0,\n        fractionGroupSeparator: ' ',\n        fractionGroupSize: 0,\n    },\n};\n\nconst createConfig = (decimalPlaces, decimalSeparator, groupSeparator) => Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    {\n        DECIMAL_PLACES: decimalPlaces,\n        FORMAT: Object.assign(\n            {},\n            DEFAULT_CONFIG.FORMAT,\n            {\n                decimalSeparator,\n                groupSeparator,\n            },\n        ),\n    },\n);\n\nexport default class BigNumberMath {\n    constructor(\n        decimalPlaces = DEFAULT_CONFIG.DECIMAL_PLACES,\n        decimalSeparator = DEFAULT_CONFIG.FORMAT.decimalSeparator,\n        groupSeparator = DEFAULT_CONFIG.FORMAT.groupSeparator,\n    ) {\n        this.config = createConfig(decimalPlaces, decimalSeparator, groupSeparator);\n    }\n\n    /**\n     * @param {number|string|BigNumber} n\n     * @param {?object} config\n     *\n     * @returns {BigNumber}\n     */\n    createBigNumberInstance(n, config = {}) {\n        const BigNumberClone = BigNumber.clone(Object.assign({}, this.config, config || {}));\n\n        return new BigNumberClone(n);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {string}\n     */\n    add(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).plus(rightOperand).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {string}\n     */\n    sub(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).minus(rightOperand).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {string}\n     */\n    div(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).dividedBy(rightOperand).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {string}\n     */\n    mul(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).multipliedBy(rightOperand).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     *\n     * @returns {string}\n     */\n    abs(operand) {\n        return this.createBigNumberInstance(operand).absoluteValue().toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isGt(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isGreaterThan(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isGte(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isGreaterThanOrEqualTo(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isLt(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isLessThan(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isLte(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isLessThanOrEqualTo(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isEqual(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isEqualTo(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     *\n     * @returns {boolean}\n     */\n    isNegative(operand) {\n        return this.createBigNumberInstance(operand).isNegative();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     *\n     * @returns {boolean}\n     */\n    isZero(operand) {\n        return this.createBigNumberInstance(operand).isZero();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     *\n     * @returns {boolean}\n     */\n    isPositive(operand) {\n        return this.createBigNumberInstance(operand).isPositive();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     * @param {number} precision\n     *\n     * @returns {string}\n     */\n    round(operand, precision = 2) {\n        return this.createBigNumberInstance(operand).toFixed(precision).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     * @param {number} precision\n     *\n     * @returns {string}\n     */\n    ceil(operand, precision) {\n        return this.createBigNumberInstance(operand).toFixed(precision, BigNumber.ROUND_CEIL).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     * @param {number} precision\n     *\n     * @returns {string}\n     */\n    floor(operand, precision = 0) {\n        return this.createBigNumberInstance(operand).toFixed(precision, BigNumber.ROUND_FLOOR).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     * @param {number} precision\n     * @param {string} decimalSeparator\n     * @param {string} groupSeparator\n     *\n     * @returns {string}\n     */\n    format(operand, precision = 0, decimalSeparator = '.', groupSeparator = ',') {\n        return this.createBigNumberInstance(\n            operand,\n            createConfig(precision, decimalSeparator, groupSeparator),\n        ).toFormat(precision);\n    }\n}\n","import { isUndefined } from 'lodash-es';\nimport { parseAmount, parseCurrency } from './util';\nimport fractions from './fractions';\nimport { DifferentCurrenciesError, MoneyError, UnsupportedCurrencyError } from './Error';\nimport BigNumberMath from './BigNumberMath';\n\nconst DEFAULT_DECIMAL_PLACES = 6;\n\nlet mathInstance = null;\n\nexport default class Money {\n    /**\n     * @param {?(string|number)} amount\n     * @param {?string} currency\n     * @param {?number} decimalPlaces\n     */\n    constructor(amount = null, currency = null, decimalPlaces = null) {\n        this.amount = parseAmount(amount);\n        this.currency = parseCurrency(currency);\n        this.decimalPlaces = decimalPlaces === null ? DEFAULT_DECIMAL_PLACES : decimalPlaces;\n    }\n\n    /**\n     * @returns {null|string}\n     */\n    getAmount() {\n        return this.amount;\n    }\n\n    /**\n     * @throws {MoneyError}\n     *\n     * @returns {number|null}\n     */\n    getAmountInCents() {\n        if (this.amount === null) {\n            return null;\n        }\n\n        const result = this.getMath()\n            .floor(this.getMath().mul(this.amount, (10 ** this.getFraction(this.currency))));\n        const integerRepresentation = parseInt(result, 10);\n        if (integerRepresentation.toString() !== result) {\n            throw new MoneyError('Amount is too large to be returned as integer');\n        }\n\n        return integerRepresentation;\n    }\n\n    /**\n     * @returns {null|string}\n     */\n    getCurrency() {\n        return this.currency;\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {Money}\n     */\n    add(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return new Money(\n            this.getMath().add(this.getAmount(), money.getAmount()),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {Money} money\n     * @returns {Money}\n     */\n    sub(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return new Money(\n            this.getMath().sub(this.getAmount(), money.getAmount()),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {(string|number)} multiplier\n     *\n     * @returns {Money}\n     */\n    mul(multiplier) {\n        return new Money(\n            this.getMath().mul(this.getAmount(), multiplier),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {(string|number)} divisor\n     *\n     * @returns {Money}\n     */\n    div(divisor) {\n        if (divisor === '0' || divisor === 0) {\n            throw new MoneyError('Division by zero');\n        }\n\n        return new Money(\n            this.getMath().div(this.getAmount(), divisor),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @returns {Money}\n     */\n    negate() {\n        return this.mul(-1);\n    }\n\n    /**\n     * @param {?number} precision\n     *\n     * @returns {Money}\n     */\n    round(precision = null) {\n        return new Money(\n            this.getMath().round(this.getAmount(), this.getCurrencyFraction(this.getCurrency(), precision)),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {?number} precision\n     *\n     * @returns {Money}\n     */\n    ceil(precision = null) {\n        return new Money(\n            this.getMath().ceil(this.getAmount(), this.getCurrencyFraction(this.getCurrency(), precision)),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {?number} precision\n     *\n     * @returns {Money}\n     */\n    floor(precision = null) {\n        return new Money(\n            this.getMath().floor(this.getAmount(), this.getCurrencyFraction(this.getCurrency(), precision)),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @returns {Money}\n     */\n    abs() {\n        return new Money(\n            this.getMath().abs(this.getAmount()),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isGt(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return this.getMath().isGt(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isGte(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return this.getMath().isGte(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isLt(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return this.getMath().isLt(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isLte(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return this.getMath().isLte(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isEqual(money) {\n        if (this.isZero() && money.isZero()) {\n            return true;\n        }\n\n        if (!this.isSameCurrency(money)) {\n            return false;\n        }\n\n        return this.getMath().isEqual(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isNegative() {\n        return this.getMath().isNegative();\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isZero() {\n        return this.getMath().isZero(this.getAmount());\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isPositive() {\n        return this.getMath().isPositive(this.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isSameCurrency(money) {\n        return this.getCurrency() === money.getCurrency();\n    }\n\n    /**\n     * @param {?number} fraction\n     * @param {?string} decimalSeparator\n     * @param {?string} thousandsSeparator\n     *\n     * @returns {string}\n     */\n    formatAmount(fraction = null, decimalSeparator = '.', thousandsSeparator = null) {\n        const currencyFraction = this.getCurrencyFraction(this.getCurrency(), fraction);\n\n        return this.getMath().format(\n            this.getAmount(),\n            currencyFraction,\n            decimalSeparator === null ? '' : decimalSeparator,\n            thousandsSeparator === null ? '' : thousandsSeparator,\n        );\n    }\n\n    /**\n     * @returns {string}\n     */\n    getAsString() {\n        return `${this.formatAmount()} ${this.getCurrency()}`;\n    }\n\n    /**\n     * @param {string} currency\n     *\n     * @returns {Money}\n     */\n    static createZero(currency) {\n        return new Money('0', currency);\n    }\n\n    /**\n     * @param {?(string|number|null)} amount\n     * @param {?(string|null)} currency\n     *\n     * @returns {Money}\n     */\n    static create(amount = null, currency = null) {\n        return new Money(amount, currency);\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @throws {DifferentCurrenciesError}\n     */\n    throwErrorIfNotSameCurrency(money) {\n        if (!this.isSameCurrency(money)) {\n            throw new DifferentCurrenciesError(`Operand currency doesn't match (lop_currency=${this.getCurrency()}, rop_currency=${money.getCurrency()})`);\n        }\n    }\n\n    /**\n     * @param {string} currency\n     *\n     * @returns {number}\n     */\n    /* eslint class-methods-use-this: \"off\" */\n    getFraction(currency) {\n        const upperCaseCurrency = currency.toUpperCase();\n\n        if (isUndefined(fractions[upperCaseCurrency])) {\n            throw new UnsupportedCurrencyError('Given currency doesn\\'t have fraction');\n        }\n\n        return fractions[upperCaseCurrency];\n    }\n\n    /**\n     * @param {string} currency\n     * @param {number|null} givenFraction\n     *\n     * @returns {number}\n     */\n    getCurrencyFraction(currency, givenFraction) {\n        if (givenFraction !== null) {\n            return givenFraction;\n        }\n\n        return this.getFraction(currency);\n    }\n\n    /**\n     * @returns {BigNumberMath}\n     */\n    getMath() {\n        if (mathInstance === null) {\n            mathInstance = new BigNumberMath(this.decimalPlaces);\n        }\n\n        return mathInstance;\n    }\n}\n","import { isUndefined } from 'lodash-es';\n\nimport Money from './Money';\n\nexport default class AggregatedMoney {\n    constructor() {\n        this.moneyList = {};\n    }\n\n    /**\n     * @param {Money[]} moneyList\n     *\n     * @returns {AggregatedMoney}\n     */\n    addAll(moneyList) {\n        moneyList.forEach((money) => {\n            this.add(money);\n        });\n\n        return this;\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {AggregatedMoney}\n     */\n    add(money) {\n        const currency = money.getCurrency();\n        let currentMoney = this.get(currency);\n\n        if (currentMoney === null) {\n            currentMoney = Money.createZero(currency);\n            this.moneyList[currency] = currentMoney;\n        }\n\n        this.moneyList[currency] = currentMoney.add(money);\n\n        return this;\n    }\n\n    /**\n     * @param {string} currency\n     *\n     * @returns {Money|null}\n     */\n    get(currency) {\n        return isUndefined(this.moneyList[currency]) ? null : this.moneyList[currency];\n    }\n\n    /**\n     * @returns {Money[]}\n     */\n    getAll() {\n        return Object.values(this.moneyList);\n    }\n}\n"],"sourceRoot":""}