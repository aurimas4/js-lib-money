{"version":3,"sources":["webpack://PayseraMoney/webpack/universalModuleDefinition","webpack://PayseraMoney/webpack/bootstrap","webpack://PayseraMoney/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack://PayseraMoney/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\",\"amd\":\"bignumber\",\"root\":\"BigNumber\"}","webpack://PayseraMoney/./src/Error/DifferentCurrenciesError.js","webpack://PayseraMoney/./src/Error/MoneyError.js","webpack://PayseraMoney/./src/Error/UnsupportedAmountError.js","webpack://PayseraMoney/./src/Error/UnsupportedCurrencyError.js","webpack://PayseraMoney/./src/util/parseAmount.js","webpack://PayseraMoney/./src/fractions.js","webpack://PayseraMoney/./src/util/parseCurrency.js","webpack://PayseraMoney/./src/BigNumberMath.js","webpack://PayseraMoney/./src/Money.js","webpack://PayseraMoney/./src/AggregatedMoney.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Error","amount","external_commonjs_lodash_commonjs2_lodash_amd_lodash_root_","formattedAmount","replace","split","length","Error_UnsupportedAmountError","match","fractions","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYR","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EEK","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RUR","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XOF","XPF","YER","ZAR","ZMW","ZWL","parseCurrency","currency","Error_UnsupportedCurrencyError","upperCaseCurrency","toUpperCase","DEFAULT_CONFIG","DECIMAL_PLACES","FORMAT","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","createConfig","decimalPlaces","assign","BigNumberMath","arguments","undefined","BigNumberMath_classCallCheck","config","external_commonjs_bignumber_js_commonjs2_bignumber_js_amd_bignumber_root_BigNumber_","clone","leftOperand","rightOperand","createBigNumberInstance","plus","toString","minus","dividedBy","multipliedBy","operand","absoluteValue","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isEqualTo","isNegative","isZero","isPositive","precision","toFixed","ROUND_CEIL","ROUND_FLOOR","toFormat","DEFAULT_DECIMAL_PLACES","mathInstance","Money","Money_classCallCheck","parseAmount","result","getMath","floor","mul","Math","pow","getFraction","integerRepresentation","parseInt","Error_MoneyError","money","throwErrorIfNotSameCurrency","add","getAmount","getCurrency","sub","multiplier","divisor","div","round","getCurrencyFraction","ceil","abs","isGt","isGte","isLt","isLte","isSameCurrency","isEqual","fraction","thousandsSeparator","currencyFraction","format","formatAmount","Error_DifferentCurrenciesError","givenFraction","src_BigNumberMath","AggregatedMoney","AggregatedMoney_classCallCheck","moneyList","_this","forEach","currentMoney","src_Money","createZero","values"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"bignumber.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\", \"bignumber\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PayseraMoney\"] = factory(require(\"lodash\"), require(\"bignumber.js\"));\n\telse\n\t\troot[\"PayseraMoney\"] = factory(root[\"_\"], root[\"BigNumber\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","export default class DifferentCurrenciesError extends Error {\n}\n","export default class MoneyError extends Error {\n}\n","export default class UnsupportedAmountError extends Error {\n}\n","export default class UnsupportedCurrencyError extends Error {\n}\n","import { isNumber, isString } from 'lodash-es';\nimport { UnsupportedAmountError } from '../Error';\n\nexport default (amount) => {\n    if (amount === '' || amount === null) {\n        return null;\n    } else if (isNumber(amount)) {\n        return amount;\n    } else if (isString(amount)) {\n        let formattedAmount = amount.replace(',', '.');\n\n        if (formattedAmount.split('.').length > 2) {\n            throw new UnsupportedAmountError(`Invalid amount: ${amount}`);\n        }\n\n        if (!formattedAmount.match(/^[-+]?\\d+(\\.\\d+)?$/)) {\n            throw new UnsupportedAmountError(`Amount has invalid chars: ${amount}`);\n        }\n\n        formattedAmount = formattedAmount.replace(/^([-+]?)0+(\\d)/, '$1$2');\n\n        return formattedAmount !== '' ? formattedAmount : null;\n    }\n\n    throw new UnsupportedAmountError(`Amount is neither string nor number: ${amount}`);\n};\n","export default {\n    AED: 2,\n    AFN: 2,\n    ALL: 2,\n    AMD: 0,\n    ANG: 2,\n    AOA: 1,\n    ARS: 2,\n    AUD: 2,\n    AWG: 2,\n    AZN: 2,\n    BAM: 2,\n    BBD: 2,\n    BDT: 2,\n    BGN: 2,\n    BHD: 3,\n    BIF: 0,\n    BMD: 2,\n    BND: 2,\n    BOB: 2,\n    BRL: 2,\n    BSD: 2,\n    BTN: 2,\n    BWP: 2,\n    BYR: 0,\n    BYN: 2,\n    BZD: 2,\n    CAD: 2,\n    CDF: 2,\n    CHF: 2,\n    CLP: 0,\n    CNY: 2,\n    COP: 2,\n    CRC: 2,\n    CUP: 2,\n    CVE: 2,\n    CZK: 2,\n    DJF: 0,\n    DKK: 2,\n    DOP: 2,\n    DZD: 2,\n    EEK: 2,\n    EGP: 2,\n    ERN: 2,\n    ETB: 2,\n    EUR: 2,\n    FJD: 2,\n    FKP: 2,\n    GBP: 2,\n    GEL: 2,\n    GHS: 2,\n    GIP: 2,\n    GMD: 2,\n    GNF: 0,\n    GTQ: 2,\n    GYD: 2,\n    HKD: 2,\n    HNL: 2,\n    HRK: 2,\n    HTG: 2,\n    HUF: 2,\n    IDR: 0,\n    ILS: 2,\n    INR: 2,\n    IQD: 0,\n    IRR: 0,\n    ISK: 0,\n    JMD: 2,\n    JOD: 3,\n    JPY: 0,\n    KES: 2,\n    KGS: 2,\n    KHR: 0,\n    KMF: 0,\n    KPW: 0,\n    KRW: 0,\n    KWD: 3,\n    KYD: 2,\n    KZT: 2,\n    LAK: 0,\n    LBP: 2,\n    LKR: 2,\n    LRD: 2,\n    LSL: 2,\n    LTL: 2,\n    LVL: 2,\n    LYD: 3,\n    MAD: 2,\n    MDL: 2,\n    MGA: 1,\n    MKD: 2,\n    MMK: 0,\n    MNT: 2,\n    MOP: 1,\n    MRO: 1,\n    MUR: 2,\n    MVR: 2,\n    MWK: 2,\n    MXN: 2,\n    MYR: 2,\n    MZN: 2,\n    NAD: 2,\n    NGN: 2,\n    NIO: 2,\n    NOK: 2,\n    NPR: 2,\n    NZD: 2,\n    OMR: 3,\n    PAB: 2,\n    PEN: 2,\n    PGK: 2,\n    PHP: 2,\n    PKR: 2,\n    PLN: 2,\n    PYG: 0,\n    QAR: 2,\n    RON: 2,\n    RSD: 2,\n    RUB: 2,\n    RUR: 2,\n    RWF: 0,\n    SAR: 2,\n    SBD: 2,\n    SCR: 2,\n    SDG: 2,\n    SEK: 2,\n    SGD: 2,\n    SHP: 2,\n    SLL: 0,\n    SOS: 2,\n    SRD: 2,\n    STD: 0,\n    SYP: 2,\n    SZL: 2,\n    THB: 2,\n    TJS: 2,\n    TMT: 2,\n    TND: 3,\n    TOP: 2,\n    TRY: 2,\n    TTD: 2,\n    TWD: 1,\n    TZS: 2,\n    UAH: 2,\n    UGX: 0,\n    USD: 2,\n    UYU: 2,\n    UZS: 2,\n    VEF: 2,\n    VND: 0,\n    VUV: 0,\n    WST: 2,\n    XAF: 0,\n    XCD: 2,\n    XOF: 0,\n    XPF: 0,\n    YER: 0,\n    ZAR: 2,\n    ZMW: 0,\n    ZWL: 2,\n};\n","import { isUndefined } from 'lodash-es';\nimport { UnsupportedCurrencyError } from '../Error';\nimport fractions from '../fractions';\n\nexport default (currency) => {\n    if (currency === null || currency === '') {\n        throw new UnsupportedCurrencyError('Currency not provided');\n    }\n    const upperCaseCurrency = currency.toUpperCase();\n\n    if (isUndefined(fractions[upperCaseCurrency])) {\n        throw new UnsupportedCurrencyError(`Unsupported currency: ${currency}`);\n    }\n\n    return upperCaseCurrency;\n};\n","import { BigNumber } from 'bignumber.js';\n\nconst DEFAULT_CONFIG = {\n    DECIMAL_PLACES: 20,\n    FORMAT: {\n        decimalSeparator: '.',\n        groupSeparator: ',',\n        groupSize: 3,\n        secondaryGroupSize: 0,\n        fractionGroupSeparator: ' ',\n        fractionGroupSize: 0,\n    },\n};\n\nconst createConfig = (decimalPlaces, decimalSeparator, groupSeparator) => Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    {\n        DECIMAL_PLACES: decimalPlaces,\n        FORMAT: Object.assign(\n            {},\n            DEFAULT_CONFIG.FORMAT,\n            {\n                decimalSeparator,\n                groupSeparator,\n            },\n        ),\n    },\n);\n\nexport default class BigNumberMath {\n    constructor(\n        decimalPlaces = DEFAULT_CONFIG.DECIMAL_PLACES,\n        decimalSeparator = DEFAULT_CONFIG.FORMAT.decimalSeparator,\n        groupSeparator = DEFAULT_CONFIG.FORMAT.groupSeparator,\n    ) {\n        this.config = createConfig(decimalPlaces, decimalSeparator, groupSeparator);\n    }\n\n    /**\n     * @param {number|string|BigNumber} n\n     * @param {?object} config\n     *\n     * @returns {BigNumber}\n     */\n    createBigNumberInstance(n, config = {}) {\n        const BigNumberClone = BigNumber.clone(Object.assign({}, this.config, config || {}));\n\n        return new BigNumberClone(n);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {string}\n     */\n    add(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).plus(rightOperand).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {string}\n     */\n    sub(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).minus(rightOperand).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {string}\n     */\n    div(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).dividedBy(rightOperand).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {string}\n     */\n    mul(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).multipliedBy(rightOperand).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     *\n     * @returns {string}\n     */\n    abs(operand) {\n        return this.createBigNumberInstance(operand).absoluteValue().toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isGt(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isGreaterThan(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isGte(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isGreaterThanOrEqualTo(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isLt(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isLessThan(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isLte(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isLessThanOrEqualTo(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} leftOperand\n     * @param {number|string|BigNumber} rightOperand\n     *\n     * @returns {boolean}\n     */\n    isEqual(leftOperand, rightOperand) {\n        return this.createBigNumberInstance(leftOperand).isEqualTo(rightOperand);\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     *\n     * @returns {boolean}\n     */\n    isNegative(operand) {\n        return this.createBigNumberInstance(operand).isNegative();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     *\n     * @returns {boolean}\n     */\n    isZero(operand) {\n        return this.createBigNumberInstance(operand).isZero();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     *\n     * @returns {boolean}\n     */\n    isPositive(operand) {\n        return this.createBigNumberInstance(operand).isPositive();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     * @param {number} precision\n     *\n     * @returns {string}\n     */\n    round(operand, precision = 2) {\n        return this.createBigNumberInstance(operand).toFixed(precision).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     * @param {number} precision\n     *\n     * @returns {string}\n     */\n    ceil(operand, precision) {\n        return this.createBigNumberInstance(operand).toFixed(precision, BigNumber.ROUND_CEIL).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     * @param {number} precision\n     *\n     * @returns {string}\n     */\n    floor(operand, precision = 0) {\n        return this.createBigNumberInstance(operand).toFixed(precision, BigNumber.ROUND_FLOOR).toString();\n    }\n\n    /**\n     * @param {number|string|BigNumber} operand\n     * @param {number} precision\n     * @param {string} decimalSeparator\n     * @param {string} groupSeparator\n     *\n     * @returns {string}\n     */\n    format(operand, precision = 0, decimalSeparator = '.', groupSeparator = ',') {\n        return this.createBigNumberInstance(\n            operand,\n            createConfig(precision, decimalSeparator, groupSeparator),\n        ).toFormat(precision);\n    }\n}\n","import { isUndefined } from 'lodash-es';\nimport { parseAmount, parseCurrency } from './util';\nimport fractions from './fractions';\nimport { DifferentCurrenciesError, MoneyError, UnsupportedCurrencyError } from './Error';\nimport BigNumberMath from './BigNumberMath';\n\nconst DEFAULT_DECIMAL_PLACES = 6;\n\nlet mathInstance = null;\n\nexport default class Money {\n    /**\n     * @param {?(string|number)} amount\n     * @param {?string} currency\n     * @param {?number} decimalPlaces\n     */\n    constructor(amount = null, currency = null, decimalPlaces = null) {\n        this.amount = parseAmount(amount);\n        this.currency = parseCurrency(currency);\n        this.decimalPlaces = decimalPlaces === null ? DEFAULT_DECIMAL_PLACES : decimalPlaces;\n    }\n\n    /**\n     * @returns {null|string}\n     */\n    getAmount() {\n        return this.amount;\n    }\n\n    /**\n     * @throws {MoneyError}\n     *\n     * @returns {number|null}\n     */\n    getAmountInCents() {\n        if (this.amount === null) {\n            return null;\n        }\n\n        const result = this.getMath()\n            .floor(this.getMath().mul(this.amount, (10 ** this.getFraction(this.currency))));\n        const integerRepresentation = parseInt(result, 10);\n        if (integerRepresentation.toString() !== result) {\n            throw new MoneyError('Amount is too large to be returned as integer');\n        }\n\n        return integerRepresentation;\n    }\n\n    /**\n     * @returns {null|string}\n     */\n    getCurrency() {\n        return this.currency;\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {Money}\n     */\n    add(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return new Money(\n            this.getMath().add(this.getAmount(), money.getAmount()),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {Money} money\n     * @returns {Money}\n     */\n    sub(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return new Money(\n            this.getMath().sub(this.getAmount(), money.getAmount()),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {(string|number)} multiplier\n     *\n     * @returns {Money}\n     */\n    mul(multiplier) {\n        return new Money(\n            this.getMath().mul(this.getAmount(), multiplier),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {(string|number)} divisor\n     *\n     * @returns {Money}\n     */\n    div(divisor) {\n        if (divisor === '0' || divisor === 0) {\n            throw new MoneyError('Division by zero');\n        }\n\n        return new Money(\n            this.getMath().div(this.getAmount(), divisor),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @returns {Money}\n     */\n    negate() {\n        return this.mul(-1);\n    }\n\n    /**\n     * @param {?number} precision\n     *\n     * @returns {Money}\n     */\n    round(precision = null) {\n        return new Money(\n            this.getMath().round(this.getAmount(), this.getCurrencyFraction(this.getCurrency(), precision)),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {?number} precision\n     *\n     * @returns {Money}\n     */\n    ceil(precision = null) {\n        return new Money(\n            this.getMath().ceil(this.getAmount(), this.getCurrencyFraction(this.getCurrency(), precision)),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {?number} precision\n     *\n     * @returns {Money}\n     */\n    floor(precision = null) {\n        return new Money(\n            this.getMath().floor(this.getAmount(), this.getCurrencyFraction(this.getCurrency(), precision)),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @returns {Money}\n     */\n    abs() {\n        return new Money(\n            this.getMath().abs(this.getAmount()),\n            this.getCurrency(),\n        );\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isGt(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return this.getMath().isGt(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isGte(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return this.getMath().isGte(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isLt(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return this.getMath().isLt(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isLte(money) {\n        this.throwErrorIfNotSameCurrency(money);\n\n        return this.getMath().isLte(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isEqual(money) {\n        if (this.isZero() && money.isZero()) {\n            return true;\n        }\n\n        if (!this.isSameCurrency(money)) {\n            return false;\n        }\n\n        return this.getMath().isEqual(this.getAmount(), money.getAmount());\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isNegative() {\n        return this.getMath().isNegative();\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isZero() {\n        return this.getMath().isZero(this.getAmount());\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isPositive() {\n        return this.getMath().isPositive(this.getAmount());\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {boolean}\n     */\n    isSameCurrency(money) {\n        return this.getCurrency() === money.getCurrency();\n    }\n\n    /**\n     * @param {?number} fraction\n     * @param {?string} decimalSeparator\n     * @param {?string} thousandsSeparator\n     *\n     * @returns {string}\n     */\n    formatAmount(fraction = null, decimalSeparator = '.', thousandsSeparator = null) {\n        const currencyFraction = this.getCurrencyFraction(this.getCurrency(), fraction);\n\n        return this.getMath().format(\n            this.getAmount(),\n            currencyFraction,\n            decimalSeparator === null ? '' : decimalSeparator,\n            thousandsSeparator === null ? '' : thousandsSeparator,\n        );\n    }\n\n    /**\n     * @returns {string}\n     */\n    getAsString() {\n        return `${this.formatAmount()} ${this.getCurrency()}`;\n    }\n\n    /**\n     * @param {string} currency\n     *\n     * @returns {Money}\n     */\n    static createZero(currency) {\n        return new Money('0', currency);\n    }\n\n    /**\n     * @param {?(string|number|null)} amount\n     * @param {?(string|null)} currency\n     *\n     * @returns {Money}\n     */\n    static create(amount = null, currency = null) {\n        return new Money(amount, currency);\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @throws {DifferentCurrenciesError}\n     */\n    throwErrorIfNotSameCurrency(money) {\n        if (!this.isSameCurrency(money)) {\n            throw new DifferentCurrenciesError(`Operand currency doesn't match (lop_currency=${this.getCurrency()}, rop_currency=${money.getCurrency()})`);\n        }\n    }\n\n    /**\n     * @param {string} currency\n     *\n     * @returns {number}\n     */\n    /* eslint class-methods-use-this: \"off\" */\n    getFraction(currency) {\n        const upperCaseCurrency = currency.toUpperCase();\n\n        if (isUndefined(fractions[upperCaseCurrency])) {\n            throw new UnsupportedCurrencyError('Given currency doesn\\'t have fraction');\n        }\n\n        return fractions[upperCaseCurrency];\n    }\n\n    /**\n     * @param {string} currency\n     * @param {number|null} givenFraction\n     *\n     * @returns {number}\n     */\n    getCurrencyFraction(currency, givenFraction) {\n        if (givenFraction !== null) {\n            return givenFraction;\n        }\n\n        return this.getFraction(currency);\n    }\n\n    /**\n     * @returns {BigNumberMath}\n     */\n    getMath() {\n        if (mathInstance === null) {\n            mathInstance = new BigNumberMath(this.decimalPlaces);\n        }\n\n        return mathInstance;\n    }\n}\n","import { isUndefined } from 'lodash-es';\n\nimport Money from './Money';\n\nexport default class AggregatedMoney {\n    constructor() {\n        this.moneyList = {};\n    }\n\n    /**\n     * @param {Money[]} moneyList\n     *\n     * @returns {AggregatedMoney}\n     */\n    addAll(moneyList) {\n        moneyList.forEach((money) => {\n            this.add(money);\n        });\n\n        return this;\n    }\n\n    /**\n     * @param {Money} money\n     *\n     * @returns {AggregatedMoney}\n     */\n    add(money) {\n        const currency = money.getCurrency();\n        let currentMoney = this.get(currency);\n\n        if (currentMoney === null) {\n            currentMoney = Money.createZero(currency);\n            this.moneyList[currency] = currentMoney;\n        }\n\n        this.moneyList[currency] = currentMoney.add(money);\n\n        return this;\n    }\n\n    /**\n     * @param {string} currency\n     *\n     * @returns {Money|null}\n     */\n    get(currency) {\n        return isUndefined(this.moneyList[currency]) ? null : this.moneyList[currency];\n    }\n\n    /**\n     * @returns {Money[]}\n     */\n    getAll() {\n        return Object.values(this.moneyList);\n    }\n}\n"],"sourceRoot":""}